x-app-env: &app_env
  environment:
    SECRET_KEY: ${SECRET_KEY}
    DB_NAME: ${DB_NAME}
    DB_USER: ${DB_USER}
    DB_PASSWORD: ${DB_PASSWORD}
    DB_HOST: ${DB_HOST}
    DB_PORT: ${DB_PORT}

  services:
    redis:
      image: redis:alpine
      ports:
        - "6379:6379"
      volumes:
        - redis_data:/data
      healthcheck:
        test: ["CMD", "redis-cli", "ping"]
        interval: 5s
        timeout: 3s
        retries: 3

    db:
      image: postgres:16-alpine
      env_file:
        - .env
      environment:
        POSTGRES_DB: ${POSTGRES_DB}
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      volumes:
        - postgres_data:/var/lib/postgresql/data
      ports:
        - "5432:5432"
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
        interval: 5s
        timeout: 5s
        retries: 5

    web:
      build: .
      command: bash -c "python manage.py migrate && python manage.py create_default_user && python manage.py collectstatic --noinput && gunicorn --bind 0.0.0.0:8000 --timeout 120 --workers 2 core.wsgi:application"
      volumes:
        - .:/app
      ports:
        - "8000:8000"
      <<: *app_env
      depends_on:
        - redis
        - db
      restart: on-failure

    worker:
      build: .
      command: celery -A core worker --loglevel=info
      volumes:
        - .:/app
      <<: *app_env
      depends_on:
        - redis
        - db
      restart: on-failure

  volumes:
    postgres_data:
    redis_data:
